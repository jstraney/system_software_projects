/* EXAMPLE 3 FACTORIAL PROGRAM FROM RUBRIC */
var f, n;
procedure fact;
  var ans1;
  begin
    ans1 := n;
    n := n -1;
    if n = 0 then f := 1;
    if n > 0 then call fact;
    f := f * ans1;
  end;
begin
  n := 3;
  call fact;
  write f
end.
/* EXAMPLE 4 FROM RUBRIC : NESTED PROCEDURES */
var x, y, z, v, w;
procedure a;
  var x, y, u, v;
  procedure b;
    var y, z, v;
    procedure c;
      var y, z;
      begin
        z := 1; 
        x := y + z + w
      end;
    begin
      y := x + u + w;
      call c
    end;
  begin
    z := 2;
    u := z + w;
    call b
  end;
begin
  x:=1; y:=2; z:=3; v:=4; w:=5;
  x:= v + w;
  write z;
  call a
end.
/* CUSTOM TEST */
/* global x */
var x;

procedure add;
  var y;
  begin
    y := x + 5;
  end;

procedure maybesub;
  /* x overwrites scope of global x. default value of 0 */
  var x, y;
  begin
    x := x - y;
  end;

procedure nested;
  /* this y should not be overwritten by y in add procedure */
  var y;
  begin;
    y := 1;
    while y > 0 do
      begin
        call add;
        y := y - 1
      end
  end;

begin
  x := 2;
  call add;
  call maybesub;
  call nested
end.
